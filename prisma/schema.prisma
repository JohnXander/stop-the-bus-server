generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  imgUrl    String
  createdAt DateTime @default(now())
  Game      Game[]
  Card      Card[]
}

model Game {
  id        Int        @id @default(autoincrement())
  name      String
  completed Boolean
  createdAt DateTime   @default(now())
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  Team      Team[]
  Category  Category[]
  Round     Round[]
}

model Team {
  id     Int    @id @default(autoincrement())
  name   String
  points Int
  game   Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId Int
}

model Category {
  id     Int    @id @default(autoincrement())
  name   String
  game   Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId Int
}

model Round {
  id      Int      @id @default(autoincrement())
  letter  String
  answers String[]
  game    Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  gameId  Int
}

model Card {
  id        Int      @id @default(autoincrement())
  word      String   @unique
  type      String
  imgUrl    String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}
